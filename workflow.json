{
  "StartAt": "FindFace",
  "States": {
    "FindFace": {
      "Type": "Task",
      "Comment": "Invoke AWS Rekognition to detect face and expressions",
      "Resource": "arn:aws:lambda:eu-west-1:849707207653:function:aws-detect-faces-dev-handlePost",
      "Parameters": {
        "s3Url.$": "$.s3Url"
      },
      "ResultPath": "$.findFaceResult",
      "Next": "NotifyFindFace",
      "Catch": [
        {
          "ErrorEquals": [
            "Lambda.Unknown",
            "States.TaskFailed"
          ],
          "ResultPath": "$.findFaceError",
          "Next": "NotifyFindFaceFailed"
        },
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "ResultPath": "$.findFaceError",
          "Next": "NotifyFindFaceFailed"
        }
      ]
    },
    "NotifyFindFaceFailed": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:eu-west-1:849707207653:function:aws-messaging-dev-handlePost",
      "Parameters": {
        "event": "message",
        "userId.$": "$.userId",
        "fields": {
          "code": "rekognition-failed",
          "message": "Find face failed"
        }
      },
      "ResultPath": "$.notifyFindFaceFailedResult",
      "End": true
    },
    "NotifyFindFace": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:eu-west-1:849707207653:function:aws-messaging-dev-handlePost",
      "Parameters": {
        "event": "message",
        "userId.$": "$.userId",
        "fields": {
          "code": "rekognition",
          "message": "Find face done",
          "faces.$": "$.findFaceResult"
        }
      },
      "ResultPath": "$.notifyFindFaceResult",
      "Next": "Resize"
    },
    "Resize": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:eu-west-1:849707207653:function:aws-resize-dev-handlePost",
      "Parameters": {
        "s3Url.$": "$.s3Url",
        "faceRect.$": "$.findFaceResult.faceRect"
      },
      "ResultPath": "$.thumbnailInfo",
      "Next": "NotifyResize",
      "Catch": [
        {
          "ErrorEquals": [
            "Lambda.Unknown",
            "States.TaskFailed"
          ],
          "ResultPath": "$.resizeError",
          "Next": "NotifyResizeFailed"
        },
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "ResultPath": "$.resizeError",
          "Next": "NotifyResizeFailed"
        }
      ]
    },
    "NotifyResize": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:eu-west-1:849707207653:function:aws-messaging-dev-handlePost",
      "Parameters": {
        "event": "message",
        "userId.$": "$.userId",
        "fields": {
          "message": "Resize done",
          "code": "resize",
          "thumbnailUrl.$": "$.thumbnailInfo.dstS3Url"
        }
      },
      "ResultPath": "$.notifyResizeResult",
      "End": true
    },
    "NotifyResizeFailed": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:eu-west-1:849707207653:function:aws-messaging-dev-handlePost",
      "Parameters": {
        "event": "message",
        "userId.$": "$.userId",
        "fields": {
          "code": "resize-failed",
          "message": "Resize failed"
        }
      },
      "ResultPath": "$.notifyResizeFailedResult",
      "End": true
    }
  }
}